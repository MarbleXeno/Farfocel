cmake_minimum_required(VERSION 3.5)

project(Vifon)

set(VIFON_SOURCE_DIR src/)
set(VIFON_INCLUDE_DIR src/)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

file(GLOB_RECURSE VIFON_SOURCE_FILES CONFIGURE_DEPENDS ${VIFON_SOURCE_DIR}/*.cpp)
file(GLOB_RECURSE VIFON_INCLUDE_FILES CONFIGURE_DEPENDS ${VIFON_INCLUDE_DIR}/*.hpp)

if(WIN32)
	add_executable(${PROJECT_NAME} WIN32 ${VIFON_SOURCE_FILES} ${VIFON_INCLUDE_FILES})
else()
	add_executable(${PROJECT_NAME} ${VIFON_SOURCE_FILES} ${VIFON_INCLUDE_FILES})
endif()
target_include_directories(${PROJECT_NAME} PUBLIC ${VIFON_INCLUDE_DIR})

target_link_libraries(${PROJECT_NAME} PUBLIC Farfocel)

set_target_properties(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX)
set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX -d)
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Vifon-Binary/)

if(WIN32 AND BUILD_SHARED_LIBS)
	add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_RUNTIME_DLLS:${PROJECT_NAME}> $<TARGET_FILE_DIR:${PROJECT_NAME}> COMMAND_EXPAND_LISTS)
endif()

install(TARGETS ${PROJECT_NAME})
